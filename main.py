import os
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes

TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = int(os.getenv("ADMIN_ID"))

async def start(update: Update, ctx: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üëã ‡¶π‡ßç‡¶Ø‡¶æ‡¶≤‡ßã! ‡¶™‡ßç‡¶∞‡ßá‡¶°‡¶ø‡¶ï‡¶∂‡¶® ‡¶¨‡¶ü‡ßá ‡¶∏‡ßç‡¶¨‡¶æ‡¶ó‡¶§‡¶Æ‡•§")

async def prediction(update: Update, ctx: ContextTypes.DEFAULT_TYPE):
    if update.effective_user.id != ADMIN_ID:
        return
    txt = " ".join(ctx.args)
    if not txt:
        await update.message.reply_text("‚ùó ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞: /prediction [‡¶ü‡ßá‡¶ï‡ßç‡¶∏‡¶ü]")
        return
    kb = InlineKeyboardMarkup([
        [InlineKeyboardButton("‚úÖ ‡¶π‡ßç‡¶Ø‡¶æ", callback_data="yes"), InlineKeyboardButton("‚ùå ‡¶®‡¶æ", callback_data="no")]
    ])
    await ctx.bot.send_message(chat_id=update.effective_chat.id, text=txt, reply_markup=kb)

async def button(update: Update, ctx: ContextTypes.DEFAULT_TYPE):
    q = update.callback_query
    await q.answer()
    resp = "‚úÖ ‡¶Ü‡¶™‡¶®‡¶ø ‡¶π‡ßç‡¶Ø‡¶æ ‡¶¨‡ßá‡¶õ‡ßá ‡¶®‡¶ø‡ßü‡ßá‡¶õ‡ßá‡¶®‡•§" if q.data=="yes" else "‚ùå ‡¶Ü‡¶™‡¶®‡¶ø ‡¶®‡¶æ ‡¶¨‡ßá‡¶õ‡ßá ‡¶®‡¶ø‡ßü‡ßá‡¶õ‡ßá‡¶®‡•§"
    await q.edit_message_text(f"{q.message.text}\n\nü§ñ ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶ö‡ßü‡ßá‡¶∏: {resp}")

if __name__ == "__main__":
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("prediction", prediction))
    app.add_handler(CallbackQueryHandler(button))
    app.run_polling()

